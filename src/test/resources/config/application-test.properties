# This property file can be used to define any platform independent properties that are specific to test cases
# (whether JUnit or Integration tests).

# This is defined and bound to config class as an example of how props can be overridden. Otherwise, the config
# class could have used ApplicationProperties class as well.
applicationTest.promptChainControllerClient.baseUrl=http://localhost:${application.serverPort}

# The spring.config.import property can be used to define properties from any property file into Spring's
# test-environment. Note that:
#   1. The property values defined in the imported files always take precedence and cannot be overridden by this file
#      (because import always appends the imported file to the end so those props would be defined later)
#   2. If multiple files are imported, then the ones imported later override the props defined in the earlier ones.
#
# Note: Though we are not using the spring.config.import property anymore and instead using UnitTestProfilesResolver
# class, however, leaving the comments and usage as useful info. The reason we are not using the resolver method is
# because it gives us full control over which property file should override which and that also based on
# spring profiles rather than hardcoding property file names.

# Importing example:
# optional:classpath:packagea/packageb/my.properties,file:relative-dir1/relative-dir2/my2.properties
#spring.config.import: classpath:config/application.properties,classpath:config/application-winLocal.properties
